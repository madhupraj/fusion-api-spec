{
  "openapi": "3.0.1",
  "info": {
    "title": "Account Management",
    "version": "v1"
  },
  "tags": [
    {
      "name": "Account Management"
    }
  ],
  "paths": {
    "/api/v1/ifi/{ifiID}/accounts": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "Get all accounts of IFI",
        "operationId": "getAccounts",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the accounts exist",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastFetchedId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/update": {
      "post": {
        "tags": [
          "Account Management"
        ],
        "summary": "Update all Accounts for a given real or headless account holder",
        "operationId": "accountHolderUpdated",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ifiID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductForAllAccountsRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyPayload"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/accessors": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "Get all accessors for a given accountID",
        "operationId": "getAccountAccessors",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account accessors exist",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose accessor details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountAccessorListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Account Management"
        ],
        "summary": "Create accessors for the given accountID",
        "operationId": "createAccountAccessor",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account accessor is being created",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account for which the accessor is being created",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/AddAccountAccessorRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Accessor"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/accessors/{accessorID}": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "Get accessor for a given accountID by the ID",
        "operationId": "getAccountAccessorByID",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account accessor exists",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose accessor details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          },
          {
            "name": "accessorID",
            "in": "path",
            "description": "ID of the accessor whose details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Accessor"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/relations": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "Get all relations of the given accountID",
        "operationId": "getAccountRelations",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account relations exist",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose relation details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountRelationListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Account Management"
        ],
        "summary": "Create relation for the given accountID",
        "operationId": "createAccountRelation",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account relation is being created",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account for which relation is being created",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/AddAccountRelationRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountRelation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/relations/{relationID}": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "Get the relation of an account by the ID",
        "operationId": "getAccountRelationByID",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account relation exists",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose relation details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          },
          {
            "name": "relationID",
            "in": "path",
            "description": "ID of the relation whose details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountRelation"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/transactionPolicies": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "operationId": "getTransactionPoliciesByAccount",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the policies exist",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose policy details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllTransactionPoliciesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/transactions": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "Get all transactions of an account",
        "operationId": "getTransactions",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account transactions exist",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose transaction details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountTransactionListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/transactions/{transactionID}": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "Get information of a specific transaction as per ID",
        "operationId": "getTransaction",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account transaction exists",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose transaction details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          },
          {
            "name": "transactionID",
            "in": "path",
            "description": "ID of the transaction whose details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/updateStatus": {
      "put": {
        "tags": [
          "Account Management"
        ],
        "summary": "Update Account Status",
        "operationId": "updateAccountStatus",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountStatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAccountStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/vectors": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "Get all vectors of the given accountID",
        "operationId": "getAccountVectors",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account vector exists",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose vector details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountVectorListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Account Management"
        ],
        "summary": "Create vector for the given accountID",
        "operationId": "createAccountVector",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account vector is being created",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose vector details are being created",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/AddAccountVectorRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountVector"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accounts/{accountID}/vectors/{vectorID}": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "Get the vector of an account by ID",
        "operationId": "getAccountVectorByID",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account vector exists",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose vector details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          },
          {
            "name": "vectorID",
            "in": "path",
            "description": "ID of the vector whose details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountVector"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/accountsInfo/{accountID}": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "operationId": "getAccountInfo",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/individuals/{individualID}/accounts": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "Get all accounts of an individual",
        "operationId": "getAccounts",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the accounts exist",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "individualID",
            "in": "path",
            "description": "ID of the individual whose accounts are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/transactions/{transactionID}/reversal": {
      "post": {
        "tags": [
          "Account Management"
        ],
        "summary": "Reversal from one account to another",
        "operationId": "reversals",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account transfer is being performed",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "transactionID",
            "in": "path",
            "description": "ID of the transaction for which reversal is required",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/ReversalRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/A2AReversalTransactionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ifi/{ifiID}/transfers": {
      "post": {
        "tags": [
          "Account Management"
        ],
        "summary": "Transfer from one account to another",
        "operationId": "transfer",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account transfer is being performed",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/TransferRequestV1"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TransferResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "Get all accounts of IFI",
        "operationId": "getAccounts",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the accounts exist",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastFetchedId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/update": {
      "post": {
        "tags": [
          "Account Management"
        ],
        "summary": "Update all Accounts for a given real or headless account holder",
        "operationId": "accountHolderUpdated",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ifiID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductForAllAccountsRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyPayload"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}/accessors": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "Get all accessors for a given accountID",
        "operationId": "getAccountAccessors",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account accessors exist",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose accessor details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountAccessorListStandardResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Account Management"
        ],
        "summary": "Create accessors for the given accountID",
        "operationId": "createAccountAccessor",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account accessor is being created",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account for which the accessor is being created",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/AddAccountAccessorRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Accessor"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}/accessors/{accessorID}": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "Get accessor for a given accountID by the ID",
        "operationId": "getAccountAccessorByID",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account accessor exists",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose accessor details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          },
          {
            "name": "accessorID",
            "in": "path",
            "description": "ID of the accessor whose details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountAccessorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}/relations": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "Get all relations of the given accountID",
        "operationId": "getAccountRelations",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account relations exist",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose relation details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountRelationListStandardResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Account Management"
        ],
        "summary": "Create relation for the given accountID",
        "operationId": "createAccountRelation",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account relation is being created",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account for which relation is being created",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/AddAccountRelationRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountRelationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}/relations/{relationID}": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "Get the relation of an account by the ID",
        "operationId": "getAccountRelationByID",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account relation exists",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose relation details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          },
          {
            "name": "relationID",
            "in": "path",
            "description": "ID of the relation whose details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountRelationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}/transactionPolicies": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "Get transaction policies of account by accountID",
        "operationId": "getTransactionPoliciesByAccount",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the policies exist",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose policy details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionPolicyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}/transactions": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "Get all transactions of an account",
        "operationId": "getTransactions",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account transactions exist",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose transaction details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}/transactions/{transactionID}": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "Get information of a specific transaction as per ID",
        "operationId": "getTransaction",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account transaction exists",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose transaction details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          },
          {
            "name": "transactionID",
            "in": "path",
            "description": "ID of the transaction whose details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountTransaction"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}/updateStatus": {
      "put": {
        "tags": [
          "Account Management"
        ],
        "summary": "Update Account Status",
        "operationId": "updateAccountStatus",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the Account",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountStatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAccountStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}/vectors": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "Get all vectors of the given accountID",
        "operationId": "getAccountVectors",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account vector exists",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose vector details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountVectorListStandardResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Account Management"
        ],
        "summary": "Create vector for the given accountID",
        "operationId": "createAccountVector",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account vector is being created",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose vector details are being created",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/AddAccountVectorRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountVectorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accounts/{accountID}/vectors/{vectorID}": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "Get the vector of an account by ID",
        "operationId": "getAccountVectorByID",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account vector exists",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose vector details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          },
          {
            "name": "vectorID",
            "in": "path",
            "description": "ID of the vector whose details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountVectorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/accountsInfo/{accountID}": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "operationId": "getAccountInfo",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the account",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "accountID",
            "in": "path",
            "description": "ID of the account whose details are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AccountInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/ifi/{ifiID}/individuals/{individualID}/accounts": {
      "get": {
        "tags": [
          "Account Management"
        ],
        "summary": "Get all accounts of an individual",
        "operationId": "getAccounts",
        "parameters": [
          {
            "name": "ifiID",
            "in": "path",
            "description": "ID of the IFI (on-boarded organization) under which the accounts exist",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 123123
          },
          {
            "name": "individualID",
            "in": "path",
            "description": "ID of the individual whose accounts are being retrieved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountListResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "A2AReversalTransactionResponse": {
        "type": "object",
        "properties": {
          "requestID": {
            "type": "string",
            "description": "Request id for A2A Reversal",
            "example": "93480e72-b883-46fa-8f3f-abe326ab9df7"
          },
          "paymentType": {
            "type": "string",
            "description": "Denotes type of payment response",
            "example": "REVERSAL"
          },
          "transactionID": {
            "type": "string",
            "description": "Denotes transaction id for which reversal needs to be done",
            "example": "20181206084927090_687_375231000459"
          },
          "revertTransactionID": {
            "type": "string",
            "description": "Denotes reverted transaction id for corresponding transaction id",
            "example": "20200429121612790_14_revert_375231000459_reversal_dfdsrdkedddsdd"
          },
          "transferCode": {
            "type": "string",
            "description": "Denotes reversal transfer code",
            "example": "ATLAS_P2M_AUTH-REVERSAL"
          },
          "amount": {
            "type": "integer",
            "description": "Amount for which reversal is required",
            "format": "int64",
            "example": 1
          },
          "currency": {
            "type": "string",
            "description": "Currency for which reversal is required",
            "example": "INR"
          },
          "remark": {
            "type": "string",
            "description": "Remark of the reversal",
            "example": "Reversal of vbo1"
          },
          "status": {
            "type": "string",
            "description": "Status of the reversal",
            "example": "SUCCESS/FAILED"
          },
          "statusDetails": {
            "$ref": "#/components/schemas/JsonObject"
          }
        }
      },
      "Accessor": {
        "type": "object",
        "properties": {
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "ifiID": {
            "type": "integer",
            "format": "int64"
          },
          "accountHolderID": {
            "type": "string"
          },
          "accountID": {
            "type": "string"
          },
          "transactionPolicyIDs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "vectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountVector"
            }
          },
          "accessors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Accessor"
            }
          },
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountRelation"
            }
          },
          "ifiID": {
            "type": "integer",
            "format": "int64"
          },
          "ownerAccountHolderID": {
            "type": "string"
          },
          "accountProviderID": {
            "type": "string"
          },
          "cardID": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "productFamilyID": {
            "type": "integer",
            "format": "int64"
          },
          "productID": {
            "type": "integer",
            "format": "int64"
          },
          "programIDs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ledgerID": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AccountAccessorResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "ifiID": {
            "type": "integer",
            "format": "int64"
          },
          "accountHolderID": {
            "type": "string"
          },
          "accountID": {
            "type": "string"
          },
          "transactionPolicyIDs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "AccountInfo": {
        "type": "object",
        "properties": {
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "vectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountVector"
            }
          },
          "accessors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Accessor"
            }
          },
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountRelation"
            }
          },
          "ifiID": {
            "type": "integer",
            "format": "int64"
          },
          "ownerAccountHolderID": {
            "type": "string"
          },
          "accountProviderID": {
            "type": "string"
          },
          "cardID": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "productFamilyID": {
            "type": "integer",
            "format": "int64"
          },
          "productFamilyName": {
            "type": "string"
          },
          "productID": {
            "type": "integer",
            "format": "int64"
          },
          "productName": {
            "type": "string"
          },
          "programIDs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "balance": {
            "type": "integer",
            "format": "int64"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "accountingType": {
            "type": "string",
            "enum": [
              "ASSET",
              "LIABILITY",
              "INCOME",
              "EXPENSE",
              "EQUITY"
            ]
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AccountInfoResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "vectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountVectorResponse"
            }
          },
          "accessors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountAccessorResponse"
            }
          },
          "relationships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountRelationResponse"
            }
          },
          "ifiID": {
            "type": "integer",
            "format": "int64"
          },
          "ownerAccountHolderID": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "productFamilyID": {
            "type": "integer",
            "format": "int64"
          },
          "productFamilyName": {
            "type": "string"
          },
          "productID": {
            "type": "integer",
            "format": "int64"
          },
          "productName": {
            "type": "string"
          },
          "programIDs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "balance": {
            "type": "integer",
            "format": "int64"
          },
          "currency": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "accountingType": {
            "type": "string",
            "enum": [
              "ASSET",
              "LIABILITY",
              "INCOME",
              "EXPENSE",
              "EQUITY"
            ]
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "AccountRelation": {
        "type": "object",
        "properties": {
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "ifiID": {
            "type": "integer",
            "format": "int64"
          },
          "accountID": {
            "type": "string"
          },
          "relatedAccountID": {
            "type": "string"
          },
          "relationshipType": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AccountRelationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "ifiID": {
            "type": "integer",
            "format": "int64"
          },
          "accountID": {
            "type": "string"
          },
          "relatedAccountID": {
            "type": "string"
          },
          "relationshipType": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "AccountTransaction": {
        "type": "object",
        "properties": {
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "accountID": {
            "type": "string"
          },
          "ledgerID": {
            "type": "integer",
            "format": "int64"
          },
          "transactionID": {
            "type": "string"
          },
          "postingID": {
            "type": "string"
          },
          "reversedTransactionID": {
            "type": "string"
          },
          "reversalTransactionIDs": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "previousBalance": {
            "type": "integer",
            "format": "int64"
          },
          "newBalance": {
            "type": "integer",
            "format": "int64"
          },
          "timestamp": {
            "type": "integer",
            "format": "int64"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "currency": {
            "type": "string"
          },
          "recordType": {
            "type": "string"
          },
          "remarks": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "AccountVector": {
        "type": "object",
        "properties": {
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "ifiID": {
            "type": "integer",
            "format": "int64"
          },
          "accountID": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          }
        }
      },
      "AccountVectorResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "ifiID": {
            "type": "integer",
            "format": "int64"
          },
          "accountID": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "AddAccountAccessorRequest": {
        "type": "object",
        "properties": {
          "accountHolderID": {
            "type": "string",
            "description": "ID of the account holder for whom the account belongs",
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          },
          "transactionPolicyIDs": {
            "type": "array",
            "description": "ID of the transaction policies assosciated with the account",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "description": "Status of the account Accessor",
            "example": "ACTIVE"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Any additional information which you would like to provide"
          }
        }
      },
      "AddAccountRelationRequest": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "type": "string",
            "description": "Relationship to the account",
            "example": "Father"
          },
          "relatedAccountID": {
            "type": "string",
            "description": "ID of the related account ID",
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          },
          "status": {
            "type": "string",
            "description": "Status of the relationship",
            "example": "ACTIVE"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Any additional information which you would like to provide"
          }
        }
      },
      "AddAccountVectorRequest": {
        "type": "object",
        "properties": {
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "ifiID": {
            "type": "integer",
            "format": "int64"
          },
          "accountID": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          }
        }
      },
      "AggregateRule": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "DEBIT",
              "CREDIT",
              "DEBIT_REVERSAL",
              "CREDIT_REVERSAL"
            ]
          },
          "transactionCategoryCode": {
            "type": "string"
          },
          "aggExpressionCode": {
            "type": "string"
          },
          "dailyLimit": {
            "type": "integer",
            "format": "int64"
          },
          "weeklyLimit": {
            "type": "integer",
            "format": "int64"
          },
          "monthlyLimit": {
            "type": "integer",
            "format": "int64"
          },
          "quarterlyLimit": {
            "type": "integer",
            "format": "int64"
          },
          "yearlyLimit": {
            "type": "integer",
            "format": "int64"
          },
          "errorCode": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "VELOCITY",
              "VOLUME"
            ]
          }
        }
      },
      "BalanceRule": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "DEBIT",
              "CREDIT",
              "DEBIT_REVERSAL",
              "CREDIT_REVERSAL"
            ]
          },
          "minRequiredBalanceAfter": {
            "type": "integer",
            "format": "int64"
          },
          "maxAllowedBalanceAfter": {
            "type": "integer",
            "format": "int64"
          },
          "minRequiredBalanceBefore": {
            "type": "integer",
            "format": "int64"
          },
          "maxAllowedBalanceBefore": {
            "type": "integer",
            "format": "int64"
          },
          "transactionCategoryCode": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          }
        }
      },
      "EmptyPayload": {
        "type": "object"
      },
      "GetAccountAccessorListResponse": {
        "type": "object",
        "properties": {
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "accessors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Accessor"
            }
          }
        }
      },
      "GetAccountAccessorListStandardResponse": {
        "type": "object"
      },
      "GetAccountListResponse": {
        "type": "object",
        "properties": {
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          }
        }
      },
      "GetAccountRelationListResponse": {
        "type": "object",
        "properties": {
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "accountRelations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountRelation"
            }
          }
        }
      },
      "GetAccountRelationListStandardResponse": {
        "type": "object"
      },
      "GetAccountTransaction": {
        "type": "object",
        "properties": {
          "accountID": {
            "type": "string"
          },
          "transactionID": {
            "type": "string"
          },
          "postingID": {
            "type": "string"
          },
          "reversedTransactionID": {
            "type": "string"
          },
          "reversalTransactionIDs": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "previousBalance": {
            "type": "integer",
            "format": "int64"
          },
          "newBalance": {
            "type": "integer",
            "format": "int64"
          },
          "timestamp": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "currency": {
            "type": "string"
          },
          "recordType": {
            "type": "string"
          },
          "remarks": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "GetAccountTransactionListResponse": {
        "type": "object",
        "properties": {
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "accountTransactionList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTransaction"
            }
          },
          "totalRecord": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetAccountVectorListResponse": {
        "type": "object",
        "properties": {
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "accountVectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountVector"
            }
          }
        }
      },
      "GetAccountVectorListStandardResponse": {
        "type": "object"
      },
      "GetAllTransactionPoliciesResponse": {
        "type": "object",
        "properties": {
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionPolicyResponse"
            }
          }
        }
      },
      "GetTransactionPolicyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "ifiId": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ENABLED",
              "DISABLED"
            ]
          },
          "description": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {}
            }
          },
          "policyViolationAction": {
            "type": "string",
            "enum": [
              "DECLINE_AND_NOTIFY",
              "DECLINE",
              "NOTIFY"
            ]
          },
          "txnConstraints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyTxnConstraint"
            }
          },
          "txnLimits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyTxnRule"
            }
          },
          "balanceLimits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyBalanceRule"
            }
          },
          "volumeLimits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyAggregateRule"
            }
          },
          "velocityLimits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyAggregateRule"
            }
          },
          "validFrom": {
            "type": "string"
          },
          "validUntil": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "JsonArray": {
        "type": "object",
        "properties": {
          "asBoolean": {
            "type": "boolean"
          },
          "asNumber": {
            "$ref": "#/components/schemas/Number"
          },
          "asFloat": {
            "type": "number",
            "format": "float"
          },
          "asLong": {
            "type": "integer",
            "format": "int64"
          },
          "asDouble": {
            "type": "number",
            "format": "double"
          },
          "asInt": {
            "type": "integer",
            "format": "int32"
          },
          "asByte": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "asCharacter": {
            "type": "string"
          },
          "asBigDecimal": {
            "type": "number"
          },
          "asBigInteger": {
            "type": "integer"
          },
          "asShort": {
            "type": "integer",
            "format": "int32"
          },
          "asString": {
            "type": "string"
          },
          "jsonObject": {
            "type": "boolean"
          },
          "jsonPrimitive": {
            "type": "boolean"
          },
          "jsonNull": {
            "type": "boolean"
          },
          "asJsonNull": {
            "$ref": "#/components/schemas/JsonNull"
          },
          "asJsonArray": {
            "$ref": "#/components/schemas/JsonArray"
          },
          "asJsonPrimitive": {
            "$ref": "#/components/schemas/JsonPrimitive"
          },
          "asJsonObject": {
            "$ref": "#/components/schemas/JsonObject"
          },
          "jsonArray": {
            "type": "boolean"
          }
        }
      },
      "JsonNull": {
        "type": "object",
        "properties": {
          "asBoolean": {
            "type": "boolean"
          },
          "jsonObject": {
            "type": "boolean"
          },
          "jsonPrimitive": {
            "type": "boolean"
          },
          "jsonNull": {
            "type": "boolean"
          },
          "asJsonNull": {
            "$ref": "#/components/schemas/JsonNull"
          },
          "asNumber": {
            "$ref": "#/components/schemas/Number"
          },
          "asJsonArray": {
            "$ref": "#/components/schemas/JsonArray"
          },
          "asJsonPrimitive": {
            "$ref": "#/components/schemas/JsonPrimitive"
          },
          "asJsonObject": {
            "$ref": "#/components/schemas/JsonObject"
          },
          "jsonArray": {
            "type": "boolean"
          },
          "asFloat": {
            "type": "number",
            "format": "float"
          },
          "asLong": {
            "type": "integer",
            "format": "int64"
          },
          "asDouble": {
            "type": "number",
            "format": "double"
          },
          "asInt": {
            "type": "integer",
            "format": "int32"
          },
          "asByte": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "asCharacter": {
            "type": "string"
          },
          "asBigDecimal": {
            "type": "number"
          },
          "asBigInteger": {
            "type": "integer"
          },
          "asShort": {
            "type": "integer",
            "format": "int32"
          },
          "asString": {
            "type": "string"
          }
        }
      },
      "JsonObject": {
        "type": "object",
        "properties": {
          "asBoolean": {
            "type": "boolean"
          },
          "jsonObject": {
            "type": "boolean"
          },
          "jsonPrimitive": {
            "type": "boolean"
          },
          "jsonNull": {
            "type": "boolean"
          },
          "asJsonNull": {
            "$ref": "#/components/schemas/JsonNull"
          },
          "asNumber": {
            "$ref": "#/components/schemas/Number"
          },
          "asJsonArray": {
            "$ref": "#/components/schemas/JsonArray"
          },
          "asJsonPrimitive": {
            "$ref": "#/components/schemas/JsonPrimitive"
          },
          "asJsonObject": {
            "$ref": "#/components/schemas/JsonObject"
          },
          "jsonArray": {
            "type": "boolean"
          },
          "asFloat": {
            "type": "number",
            "format": "float"
          },
          "asLong": {
            "type": "integer",
            "format": "int64"
          },
          "asDouble": {
            "type": "number",
            "format": "double"
          },
          "asInt": {
            "type": "integer",
            "format": "int32"
          },
          "asByte": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "asCharacter": {
            "type": "string"
          },
          "asBigDecimal": {
            "type": "number"
          },
          "asBigInteger": {
            "type": "integer"
          },
          "asShort": {
            "type": "integer",
            "format": "int32"
          },
          "asString": {
            "type": "string"
          }
        }
      },
      "JsonPrimitive": {
        "type": "object",
        "properties": {
          "number": {
            "type": "boolean"
          },
          "boolean": {
            "type": "boolean"
          },
          "asBoolean": {
            "type": "boolean"
          },
          "string": {
            "type": "boolean"
          },
          "asNumber": {
            "$ref": "#/components/schemas/Number"
          },
          "asFloat": {
            "type": "number",
            "format": "float"
          },
          "asLong": {
            "type": "integer",
            "format": "int64"
          },
          "asDouble": {
            "type": "number",
            "format": "double"
          },
          "asInt": {
            "type": "integer",
            "format": "int32"
          },
          "asByte": {
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
            "type": "string",
            "format": "byte"
          },
          "asCharacter": {
            "type": "string"
          },
          "asBigDecimal": {
            "type": "number"
          },
          "asBigInteger": {
            "type": "integer"
          },
          "asShort": {
            "type": "integer",
            "format": "int32"
          },
          "asString": {
            "type": "string"
          },
          "jsonObject": {
            "type": "boolean"
          },
          "jsonPrimitive": {
            "type": "boolean"
          },
          "jsonNull": {
            "type": "boolean"
          },
          "asJsonNull": {
            "$ref": "#/components/schemas/JsonNull"
          },
          "asJsonArray": {
            "$ref": "#/components/schemas/JsonArray"
          },
          "asJsonPrimitive": {
            "$ref": "#/components/schemas/JsonPrimitive"
          },
          "asJsonObject": {
            "$ref": "#/components/schemas/JsonObject"
          },
          "jsonArray": {
            "type": "boolean"
          }
        }
      },
      "Money": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Number": {
        "type": "object"
      },
      "PolicyAggregateRule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "policyVersionID": {
            "type": "integer",
            "format": "int64"
          },
          "action": {
            "type": "string",
            "enum": [
              "DEBIT",
              "CREDIT",
              "DEBIT_REVERSAL",
              "CREDIT_REVERSAL"
            ]
          },
          "categoryCode": {
            "type": "string"
          },
          "aggExpressionID": {
            "type": "integer",
            "format": "int64"
          },
          "aggExpressionCode": {
            "type": "string"
          },
          "dailyLimit": {
            "type": "integer",
            "format": "int64"
          },
          "weeklyLimit": {
            "type": "integer",
            "format": "int64"
          },
          "monthlyLimit": {
            "type": "integer",
            "format": "int64"
          },
          "quarterlyLimit": {
            "type": "integer",
            "format": "int64"
          },
          "yearlyLimit": {
            "type": "integer",
            "format": "int64"
          },
          "errorCode": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "VELOCITY",
              "VOLUME"
            ]
          }
        }
      },
      "PolicyBalanceRule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "policyVersionID": {
            "type": "integer",
            "format": "int64"
          },
          "action": {
            "type": "string",
            "enum": [
              "DEBIT",
              "CREDIT",
              "DEBIT_REVERSAL",
              "CREDIT_REVERSAL"
            ]
          },
          "minRequiredBalance": {
            "type": "integer",
            "format": "int64"
          },
          "maxAllowedBalance": {
            "type": "integer",
            "format": "int64"
          },
          "minRequiredBalanceBeforeTxn": {
            "type": "integer",
            "format": "int64"
          },
          "maxAllowedBalanceBeforeTxn": {
            "type": "integer",
            "format": "int64"
          },
          "transactionCategory": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          }
        }
      },
      "PolicyTxnConstraint": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "policyVersionID": {
            "type": "integer",
            "format": "int64"
          },
          "action": {
            "type": "string",
            "enum": [
              "DEBIT",
              "CREDIT",
              "DEBIT_REVERSAL",
              "CREDIT_REVERSAL"
            ]
          },
          "allowedTxnCategoryCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "disallowedTxnCategoryCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allowedTimeSlices": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "disallowedTimeSlices": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "errorCode": {
            "type": "string"
          }
        }
      },
      "PolicyTxnRule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "policyVersionID": {
            "type": "integer",
            "format": "int64"
          },
          "action": {
            "type": "string",
            "enum": [
              "DEBIT",
              "CREDIT",
              "DEBIT_REVERSAL",
              "CREDIT_REVERSAL"
            ]
          },
          "categoryCode": {
            "type": "string"
          },
          "minRequiredAmount": {
            "type": "integer",
            "format": "int64"
          },
          "maxAllowedAmount": {
            "type": "integer",
            "format": "int64"
          },
          "errorCode": {
            "type": "string"
          }
        }
      },
      "ReversalRequest": {
        "required": [
          "amount",
          "currency",
          "remarks",
          "requestID",
          "transferCode"
        ],
        "type": "object",
        "properties": {
          "requestID": {
            "type": "string",
            "description": "Request id for A2A Reversal",
            "example": "93480e72-b883-46fa-8f3f-abe326ab9df7"
          },
          "currency": {
            "type": "string",
            "description": "Currency for which reversal is required",
            "example": "INR"
          },
          "amount": {
            "type": "integer",
            "description": "Amount for which reversal is required",
            "format": "int64",
            "example": 1
          },
          "transferCode": {
            "type": "string",
            "description": "Denotes reversal transfer code",
            "example": "ATLAS_P2M_AUTH-REVERSAL"
          },
          "doPartialReversal": {
            "type": "boolean",
            "description": "Pass this as true or false for partial reversal of transaction",
            "example": true
          },
          "remarks": {
            "type": "string",
            "description": "Remark of the reversal",
            "example": "Reversal of vbo1"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "TransactionConstraint": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "DEBIT",
              "CREDIT",
              "DEBIT_REVERSAL",
              "CREDIT_REVERSAL"
            ]
          },
          "allowedTransactionCategoryCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "disallowedTransactionCategoryCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allowedTimeSlices": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "disallowedTimeSlices": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "errorCode": {
            "type": "string"
          }
        }
      },
      "TransactionPolicyResponse": {
        "type": "object",
        "properties": {
          "ifiID": {
            "type": "integer",
            "description": "ID of the on-boarded organization",
            "format": "int64",
            "example": 123123
          },
          "accountHolderID": {
            "type": "string",
            "description": "ID of the account holder",
            "example": "aa267641-f475-4acb-859e-bb9c60d3e9db"
          },
          "coaID": {
            "type": "integer",
            "description": "Code given to a transaction policy",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "description": "Policy ID",
            "format": "int64"
          },
          "code": {
            "type": "string",
            "description": "Coa ID of issuer to which the transaction policy would be associated"
          },
          "description": {
            "type": "string",
            "description": "Description of transaction policy"
          },
          "state": {
            "type": "string",
            "description": "State of the transaction policy",
            "example": "ENABLED or DISABLED",
            "enum": [
              "ENABLED",
              "DISABLED"
            ]
          },
          "scope": {
            "type": "string",
            "description": "Scope of transaction policy",
            "example": "AGGREGATE_OF_ALL_ACCOUNTS_OF_ACCOUNT_HOLDER or EACH_ACCOUNT_OF_ACCOUNT_HOLDER",
            "enum": [
              "AGGREGATE_OF_ALL_ACCOUNTS_OF_ACCOUNT_HOLDER",
              "EACH_ACCOUNT_OF_ACCOUNT_HOLDER"
            ]
          },
          "transactionConstraints": {
            "type": "array",
            "description": "Transaction Constraints containing allowed/disallowed transaction categories and time slices",
            "items": {
              "$ref": "#/components/schemas/TransactionConstraint"
            }
          },
          "transactionRules": {
            "type": "array",
            "description": "Transaction rules to be applied on a particular posting",
            "items": {
              "$ref": "#/components/schemas/TransactionRule"
            }
          },
          "balanceRules": {
            "type": "array",
            "description": "Balance rules to be applied either on transacting account or group of accounts of account holder based on applicability criteria and policy scope ",
            "items": {
              "$ref": "#/components/schemas/BalanceRule"
            }
          },
          "aggregateRules": {
            "type": "array",
            "description": "Aggregate rules (daily, weekly, monthly, quarterly, yearly) to be applied based on applicability criteria and transaction category",
            "items": {
              "$ref": "#/components/schemas/AggregateRule"
            }
          },
          "effectiveFrom": {
            "type": "string",
            "description": "Effective date from when the transaction policy will be applied",
            "example": "2020-02-18T06:24:14.000Z"
          },
          "expiresAt": {
            "type": "string",
            "description": "Expiry date for the transaction policy post which it will not be applied",
            "example": "2020-02-18T06:24:14.000Z"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation date of the transaction policy",
            "example": "2020-02-18T06:24:14.000Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Last updated date of the transaction policy",
            "example": "2020-02-18T06:24:14.000Z"
          },
          "violationAction": {
            "type": "string",
            "description": "Transaction policy violation action",
            "example": "DECLINE, NOTIFY, DECLINE_AND_NOTIFY",
            "enum": [
              "DECLINE_AND_NOTIFY",
              "DECLINE",
              "NOTIFY"
            ]
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Any additional information that you would like to associate with the transaction policy"
          }
        }
      },
      "TransactionRule": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "DEBIT",
              "CREDIT",
              "DEBIT_REVERSAL",
              "CREDIT_REVERSAL"
            ]
          },
          "transactionCategoryCode": {
            "type": "string"
          },
          "minRequiredAmount": {
            "type": "integer",
            "format": "int64"
          },
          "maxAllowedAmount": {
            "type": "integer",
            "format": "int64"
          },
          "errorCode": {
            "type": "string"
          }
        }
      },
      "TransferRequestV1": {
        "required": [
          "amount",
          "transferTime"
        ],
        "type": "object",
        "properties": {
          "requestID": {
            "type": "string"
          },
          "amount": {
            "$ref": "#/components/schemas/Money"
          },
          "transferCode": {
            "type": "string"
          },
          "debitAccountID": {
            "type": "string"
          },
          "creditAccountID": {
            "type": "string"
          },
          "transferTime": {
            "type": "integer",
            "format": "int64"
          },
          "remarks": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Any additional information which you would like to provide"
          }
        }
      },
      "TransferResponse": {
        "type": "object",
        "properties": {
          "requestID": {
            "type": "string"
          },
          "transferID": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "isRetriableFailure": {
            "type": "string"
          }
        }
      },
      "UpdateAccountStatusRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of the account to be changed"
          }
        }
      },
      "UpdateAccountStatusResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "ifiID": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "UpdateProductForAllAccountsRequest": {
        "type": "object",
        "properties": {
          "accountHolderType": {
            "type": "string",
            "enum": [
              "REAL",
              "LEGAL",
              "HEADLESS"
            ]
          },
          "accountHolderID": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "object": {
            "type": "string"
          }
        }
      }
    }
  }
}